# =============================================================================
# MindNote Environment Configuration Template
# =============================================================================
# 复制此文件为 .env 并填入实际的配置值
# 注意：生产环境中请使用强密码和真实的API密钥

# 数据库配置
DATABASE_URL="postgresql://mindnote:${POSTGRES_PASSWORD}@localhost:5432/mindnote_dev"
POSTGRES_USER=mindnote
# ⚠️ 生产环境：使用至少32位的强密码，包含大小写字母、数字和特殊字符
POSTGRES_PASSWORD="your_strong_postgres_password_here"
POSTGRES_DB=mindnote_dev

# Redis配置
REDIS_URL="redis://:${REDIS_PASSWORD}@localhost:6379"
# ⚠️ 生产环境：使用至少32位的强密码
REDIS_PASSWORD="your_strong_redis_password_here"

# NextAuth.js配置
NEXTAUTH_URL="http://localhost:3000"
# ⚠️ 生产环境：使用 openssl rand -base64 32 生成强密钥
NEXTAUTH_SECRET="your_nextauth_secret_key_minimum_32_characters"

# AI服务配置
# OpenAI
OPENAI_API_KEY="your-openai-api-key"
OPENAI_BASE_URL="https://api.openai.com/v1"
OPENAI_MODEL="gpt-4-turbo-preview"

# Anthropic Claude
ANTHROPIC_API_KEY="your-anthropic-api-key"
ANTHROPIC_BASE_URL="https://api.anthropic.com"
ANTHROPIC_MODEL="claude-3-sonnet-20241022"

# 智谱AI (GLM)
ZHIPU_API_KEY="your-zhipu-api-key"
ZHIPU_BASE_URL="https://open.bigmodel.cn/api/paas/v4"
ZHIPU_MODEL="glm-4"

# DeepSeek
DEEPSEEK_API_KEY="your-deepseek-api-key"
DEEPSEEK_BASE_URL="https://api.deepseek.com"
DEEPSEEK_MODEL="deepseek-chat"

# Kimi (Moonshot AI)
KIMI_API_KEY="your-kimi-api-key"
KIMI_BASE_URL="https://api.moonshot.cn/v1"
KIMI_MODEL="moonshot-v1-8k"

# 通义千问 (Qwen)
QWEN_API_KEY="your-qwen-api-key"
QWEN_BASE_URL="https://dashscope.aliyuncs.com/compatible-mode/v1"
QWEN_MODEL="qwen-turbo"

# 本地AI服务 (Ollama)
OLLAMA_BASE_URL="http://localhost:11434"
OLLAMA_MODEL="llama3:8b"

# AI服务优先级配置 (fallback顺序)
AI_PROVIDERS_PRIORITY="openai,anthropic,zhipu,deepseek,kimi,qwen,ollama"
AI_PRIMARY_PROVIDER="openai"
AI_FALLBACK_PROVIDER="ollama"

# 应用配置
NODE_ENV="development"
PORT=3000

# 日志配置
LOG_LEVEL="info"
LOG_FILE="logs/app.log"

# 监控配置
PROMETHEUS_PORT=9090
METRICS_ENABLED=true

# 开发工具配置
ENABLE_SWAGGER=true
ENABLE_GRAPHQL_PLAYGROUND=false

# 安全配置
CORS_ORIGIN="http://localhost:3000"
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# 云存储配置 (可选)
AWS_ACCESS_KEY_ID=""
AWS_SECRET_ACCESS_KEY=""
AWS_REGION=""
AWS_S3_BUCKET=""

# 邮件配置 (可选)
SMTP_HOST=""
SMTP_PORT=587
SMTP_USER=""
SMTP_PASS=""

# 测试数据库配置
TEST_DATABASE_URL="postgresql://mindnote:test_password@localhost:5432/mindnote_test"

# Docker配置
COMPOSE_PROJECT_NAME="mindnote"
COMPOSE_FILE="docker-compose.yml:docker-compose.dev.yml"

# 开发工具
CHOKIDAR_USEPOLLING=true
FAST_REFRESH=true

# =============================================================================
# 安全配置最佳实践
# =============================================================================

# 1. 密码强度要求：
#    - 至少32个字符
#    - 包含大小写字母、数字和特殊字符
#    - 避免使用常见词汇和模式

# 2. API密钥管理：
#    - 使用环境变量或密钥管理服务
#    - 定期轮换API密钥
#    - 限制API密钥的权限范围

# 3. 生产环境安全：
#    - 使用HTTPS
#    - 启用所有安全头部
#    - 配置防火墙规则
#    - 定期备份和更新依赖

# 4. 数据库安全：
#    - 使用SSL连接
#    - 限制数据库访问权限
#    - 定期备份数据
#    - 监控异常访问

# 5. 应用安全：
#    - 启用速率限制
#    - 实施输入验证
#    - 使用内容安全策略
#    - 定期安全审计